// <auto-generated />
using FindingImmo.Core.Domain.DataAccess;
using FindingImmo.Core.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FindingImmo.Core.Migrations
{
    [DbContext(typeof(ImmoDbContext))]
    [Migration("20171227132513_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("FindingImmo.Core.Domain.Models.Ad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Creation")
                        .HasColumnName("date_creation");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("description");

                    b.Property<int>("EnergyClass")
                        .HasColumnName("classe_energie");

                    b.Property<string>("ExternalId")
                        .IsRequired()
                        .HasColumnName("reference_externe");

                    b.Property<int>("GES")
                        .HasColumnName("GES");

                    b.Property<bool>("IsPro")
                        .HasColumnName("est_agence");

                    b.Property<DateTime>("LastScraping")
                        .HasColumnName("date_derniere_maj");

                    b.Property<int>("Origin")
                        .HasColumnName("site_origine");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnName("code_postal")
                        .HasMaxLength(5);

                    b.Property<int>("Price")
                        .HasColumnName("prix");

                    b.Property<int>("RoomsCount")
                        .HasColumnName("nombre_pieces");

                    b.Property<int>("Surface")
                        .HasColumnName("surface");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnName("titre");

                    b.HasKey("Id");

                    b.ToTable("offre");
                });

            modelBuilder.Entity("FindingImmo.Core.Domain.Models.Picture", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<long>("AdId")
                        .HasColumnName("id_offre");

                    b.Property<int>("Height")
                        .HasColumnName("hauteur");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnName("url");

                    b.Property<int>("Width")
                        .HasColumnName("largeur");

                    b.HasKey("Id");

                    b.HasIndex("AdId");

                    b.ToTable("image");
                });

            modelBuilder.Entity("FindingImmo.Core.Domain.Models.Picture", b =>
                {
                    b.HasOne("FindingImmo.Core.Domain.Models.Ad", "Ad")
                        .WithMany("Pictures")
                        .HasForeignKey("AdId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
